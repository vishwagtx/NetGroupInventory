name: .NET CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - master
  pull_request:
    branches:
      - main
      - develop
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: [6.0.x]  # Change based on your .NET version

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # Updated to v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4  # Updated to v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore Dependencies
        run: dotnet restore NetGroupInventory.sln

      - name: Build Project
        run: dotnet build NetGroupInventory.sln --configuration Release --no-restore

      name: .NET CI Pipeline

on:
  push:
    branches:
      - main
      - dev
      - master
  pull_request:
    branches:
      - main
      - dev
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      Solution_Name: Fitness.sln

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: Restore Dependencies
        run: dotnet restore $Solution_Name

      - name: Build Project
        run: dotnet build $Solution_Name --configuration Release --no-restore

      - name: Run unit tests
        run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test-results.trx"

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        with:
          name: .NET Unit Tests
          path: '**/*.trx' # Path to test results
          reporter: dotnet-trx

      - name: Publish Coverage Report (Optional - if using code coverage)
        if: ${{ always() }} # Ensure this step runs even if tests fail.
        uses: codecov/codecov-action@v3
        with:
          flags: unittests
          fail_ci_if_error: true
          verbose: true

      - name: Publish Artifacts (Optional)
        run: dotnet publish $Solution_Name --configuration Release --output ./publish

      - name: Upload Build Artifacts (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: ./publish


      - name: Publish Artifacts (Optional)
        run: dotnet publish NetGroupInventory.sln --configuration Release --output ./publish

      - name: Upload Build Artifacts (Optional)
        uses: actions/upload-artifact@v4  # âœ… Updated to v4
        with:
          name: published-app
          path: ./publish
